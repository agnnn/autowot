package {{PackageName}};

import com.sun.grizzly.http.SelectorThread;
import com.sun.jersey.api.container.grizzly.GrizzlyWebContainerFactory;
import java.io.IOException;
import java.net.BindException;
import java.net.URI;
import java.util.HashMap;
import java.util.Map;
import javax.ws.rs.core.UriBuilder;

import {{JerseyCommonsPackage}}.JerseyConstants;

/**
 * @author {{AuthorName}}
 * @meta-author {{MetaAuthorName}}
 */

public class JerseyMain {
	
	protected static String baseURI = JerseyConstants.BASE_URI;
	protected static int port = JerseyConstants.SERVER_PORT;
	protected static SelectorThread webServerThread;
	
    private static URI getURI() {
        return UriBuilder.fromUri(baseURI+"/").port(port).build();
    }

    protected static void startServer() throws IOException {
        final Map<String, String> initParams = new HashMap<String, String>();
        initParams.put("com.sun.jersey.config.property.packages", "{{ResourcesPackageName}}");
        System.out.println("Starting Grizzly Web Container...");
        try {
        	webServerThread = GrizzlyWebContainerFactory.create(getURI(), initParams);     
        } catch (BindException e) {
        	System.out.println("\nProblem Report: Most probably, you already have a server running on port " + JerseyConstants.SERVER_PORT + ".\nChange the SERVER_PORT in " + JerseyConstants.class.getCanonicalName() + ".java to a different value.\n");
        }     
    }
    
    protected static void stopServer() throws IOException, InstantiationException {
    	webServerThread.stopEndpoint();
    }
    
{{MakeStandalone}}	public static void main(String[] args) throws IOException, InstantiationException {
{{MakeStandalone}}		startServer();
{{MakeStandalone}}		System.out.println(String.format("Server running at %s on port %s", baseURI, port));
{{MakeStandalone}}		System.in.read();
{{MakeStandalone}}		stopServer();
{{MakeStandalone}}	}
    
}
